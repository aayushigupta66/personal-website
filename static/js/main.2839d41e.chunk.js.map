{"version":3,"sources":["resume.pdf","img/graphic.png","img/profile.jpeg","img/circle-cropped.png","component/Home.js","component/About.js","component/Work.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Work","className","href","pdf","target","type","class","src","graphic","Component","About","id","profile","App","useState","page","setPage","Navbar","collapseOnSelect","expand","Brand","onClick","Toggle","aria-controls","Collapse","Nav","Link","eventKey","returnPage","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,oC,6DCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,sC,iGCA3CD,EAAOC,QAAU,IAA0B,4C,8KCsD5BC,G,6KA7CX,OACE,oCACA,yBAAKC,UAAU,QAGb,yBAAKA,UAAU,WACb,0BAAMA,UAAU,SAAhB,WACA,0BAAMA,UAAU,QAAhB,sBACA,6BACE,0BAAMA,UAAU,YAAhB,sBAEF,6BACE,0BAAMA,UAAU,SAAhB,6EAEF,yBAAKA,UAAU,UACb,uBAAGA,UAAU,SAASC,KAAMC,IAAKC,OAAO,UACtC,4BAAQC,KAAK,SAASC,MAAM,sCAA5B,kBAKN,yBAAKL,UAAU,kBACb,yBAAKA,UAAU,UAAUM,IAAKC,a,GAxBrBC,c,yBCuDJC,E,uKArDX,OACE,oCACE,uBAAGC,GAAG,SAAN,QACA,yBAAKV,UAAU,WAEf,yBAAKA,UAAU,kBAQb,6BACE,yBAAKA,UAAU,MAAMM,IAAKK,OAG5B,yBAAKX,UAAU,aACb,6BACE,0BAAMA,UAAU,cAAhB,KACA,0BAAMA,UAAU,cAAhB,KACA,0BAAMA,UAAU,cAAhB,KACA,0BAAMA,UAAU,cAAhB,KACA,0BAAMA,UAAU,cAAhB,KAEA,yBAAKA,UAAU,oBACb,0BAAMA,UAAU,aAAhB,kDAIJ,yBAAKA,UAAU,SACf,0BAAMA,UAAU,YAAhB,iDAGA,yBAAKA,UAAU,SACf,0BAAMA,UAAU,YAAhB,0LAGA,yBAAKA,UAAU,SACf,0BAAMA,UAAU,YAAhB,uR,GAzCQQ,aCaLT,E,uKAfX,OACE,oCACE,uBAAGW,GAAG,QAAN,QACA,yBAAKA,GAAG,SACR,yBAAKV,UAAU,eACb,uBAAGA,UAAU,YAAb,mE,GAPSQ,a,gBCyDJI,MA5Cf,WAAgB,IAAD,EAEWC,mBAAS,QAFpB,mBAENC,EAFM,KAEAC,EAFA,KAeb,OACE,yBAAKf,UAAU,OACb,uBAAGU,GAAG,QAAN,KAGE,yBAAKV,UAAU,eACf,kBAACgB,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,MAC9B,kBAACF,EAAA,EAAOG,MAAR,CAAcnB,UAAU,gBAAgBC,KAAK,QAAQmB,QAAS,WAAQL,EAAQ,UAA9E,iBACA,kBAACC,EAAA,EAAOK,OAAR,CAAeC,gBAAc,0BAC7B,kBAACN,EAAA,EAAOO,SAAR,CAAiBb,GAAG,yBAClB,kBAACc,EAAA,EAAD,CAAKxB,UAAU,YAEf,kBAACwB,EAAA,EAAD,KACE,kBAACA,EAAA,EAAIC,KAAL,CAAUzB,UAAU,SAASC,KAAK,QAAQmB,QAAS,WAAQL,EAAQ,UAAnE,QACA,kBAACS,EAAA,EAAIC,KAAL,CAAUzB,UAAU,SAAS0B,SAAU,EAAGzB,KAAK,SAASmB,QAAS,WAAQL,EAAQ,WAAjF,aAzBO,WACjB,OAAOD,GACL,IAAK,OACH,OAAO,kBAAC,EAAD,MACT,IAAK,QACH,OAAO,kBAAC,EAAD,MACT,IAAK,OACH,OAAO,kBAAC,EAAD,OA2BRa,KC1CaC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCVNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.2839d41e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/resume.110ed081.pdf\";","module.exports = __webpack_public_path__ + \"static/media/graphic.f472b2a6.png\";","module.exports = __webpack_public_path__ + \"static/media/profile.3c1eea8f.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/circle-cropped.e64c32dd.png\";","import React, { Component } from 'react';\nimport './Home.scss';\n\nimport graphic from '../img/graphic.png';\nimport profile from '../img/circle-cropped.png';\nimport pdf from '../resume.pdf';\n\nclass Work extends Component {\n  render() {\n    return (\n      <>\n      <div className='home' >\n\n        {/* landing page */}\n        <div className='landing'>\n          <span className='hello'>HELLO, </span>\n          <span className='name'>I'M AAYUSHI GUPTA.</span>\n          <div>\n            <span className='position'>SOFTWARE ENGINEER</span>\n          </div>\n          <div>\n            <span className='intro'>Undergrad student @ UIUC seeking a full time job as a frontend developer</span>\n          </div>\n          <div className='resume'>\n            <a className='noLink' href={pdf} target=\"_blank\">\n              <button type=\"button\" class=\"btn btn-outline-light resumeButton\" >VIEW RESUME</button>\n            </a>\n          </div>\n        </div>\n\n        <div className='graphicPadding'> \n          <img className='graphic' src={graphic} />\n        </div> \n\n      </div>\n      \n\n      \n        {/* about me */}\n        {/* <a id='about'>    </a> */}\n        \n\n     \n\n        \n        </>\n\n\n      \n      \n    );\n  }\n}\n\nexport default Work;","import React, { Component } from 'react';\nimport './About.scss'\nimport './Home.scss';\n\nimport profile from '../img/profile.jpeg';\n\n\nclass About extends Component {\n  render() {\n    return (\n      <>\n        <a id='about'>    </a>\n        <div className='aboutMe'>\n        \n        <div className='whiteBlock box'>\n          \n          {/* <div className='center'>\n            <span className='aboutTitle'>ABOUT ME</span>\n            <div className='underLine'></div>\n          </div> */}\n          \n\n          <div> \n            <img className='pfp' src={profile} />\n          </div> \n\n          <div className='paragraph'>\n            <div>\n              <span className='aboutTitle'>A</span>\n              <span className='aboutTitle'>B</span>\n              <span className='aboutTitle'>O</span>\n              <span className='aboutTitle'>U</span>\n              <span className='aboutTitle'>T</span>\n       \n              <div className='underlinePadding'>\n                <span className='underline'>____________________________________________</span>\n              </div>\n            </div>\n\n            <div className='lines'>\n            <span className='fontSize'>Nice to meet you - I'm Aayushi! ðŸ‘‹</span> \n            </div>\n\n            <div className='lines'>\n            <span className='fontSize'>I'm a fourth-year Computer Science and Statistics major at the University ofÂ Illinois at Urbana-Champaign looking to gain industry experience and apply my problem-solving skills.</span>\n            </div>\n            \n            <div className='lines'>\n            <span className='fontSize'>As a frontend developer, I am passionate about tying design decisions to desired outcomes to address the central challenge of creating good user experiences. I am always hungry to learn and improve and love seeking new challenges to continue to develop my skillset. </span>\n            </div>\n          </div>\n\n           \n\n        </div>\n      </div>  \n          \n      </>\n    );\n  }\n}\n\nexport default About;","import React, { Component } from 'react';\nimport './About.scss'\n\nclass Work extends Component {\n  render() {\n    return (\n      <>\n        <a id='work'>    </a>\n        <div id='about'>\n        <div className='infoPadding'>\n          <p className='infoBody'>\n            Sorry for the inconvenience! Website under construction. \n          </p>\n        </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Work;","import React, { useState, setState, Component } from 'react';\nimport './main.scss';\nimport pdf from './resume.pdf';\n\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\nimport Home from './component/Home';\nimport About from './component/About';\nimport Work from './component/Work';\n\nimport Button from '@material-ui/core/Button';\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\n\nfunction App() {\n\n  const [page, setPage] = useState('home');\n\n  const returnPage = () => {\n    switch(page) {\n      case 'home':\n        return <Home />;\n      case 'about': \n        return <About />;\n      case 'work':\n        return <Work />;\n    }\n  }\n\n  return (\n    <div className='App'>\n      <a id='home'> </a>\n\n      {/* navbar */}\n        <div className='buttonGroup'>\n        <Navbar collapseOnSelect expand=\"lg\" >\n          <Navbar.Brand className='aayushiButton' href=\"#home\" onClick={() => { setPage('home') }}>AAYUSHI GUPTA</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto\">\n            </Nav>\n            <Nav>\n              <Nav.Link className='button' href=\"#work\" onClick={() => { setPage('work') }}>WORK</Nav.Link>\n              <Nav.Link className='button' eventKey={2} href=\"#about\" onClick={() => { setPage('about') }}>ABOUT</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        </div>\n        \n    \n\n      {/* redirect pages */}\n      {returnPage()}\n    </div>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}